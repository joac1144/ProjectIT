// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectIT.Server.Database;

#nullable disable

namespace ProjectIT.Server.Migrations
{
    [DbContext(typeof(ProjectITDbContext))]
    [Migration("20230409024819_ProjectIT 7e2df268-21d2-4b92-81c8-8bc67df45f29")]
    partial class ProjectIT7e2df26821d24b9281c88bc67df45f29
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectIT.Shared.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoSupervisorId")
                        .HasColumnType("integer");

                    b.Property<string>("DescriptionHtml")
                        .IsRequired()
                        .HasMaxLength(4400)
                        .HasColumnType("character varying(4400)");

                    b.Property<string>("Ects")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Programmes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SemesterId")
                        .HasColumnType("integer");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CoSupervisorId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4400)
                        .HasColumnType("character varying(4400)");

                    b.Property<string>("Ects")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Programmes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SemesterId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Season")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RequestId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Student", b =>
                {
                    b.HasBaseType("ProjectIT.Shared.Models.User");

                    b.Property<int?>("Programme")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("RequestId")
                        .HasColumnType("integer");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RequestId");

                    b.ToTable("Users", t =>
                        {
                            t.Property("RequestId")
                                .HasColumnName("Student_RequestId");
                        });

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Supervisor", b =>
                {
                    b.HasBaseType("ProjectIT.Shared.Models.User");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RequestId")
                        .HasColumnType("integer");

                    b.HasIndex("RequestId");

                    b.HasDiscriminator().HasValue("Supervisor");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Project", b =>
                {
                    b.HasOne("ProjectIT.Shared.Models.Supervisor", "CoSupervisor")
                        .WithMany()
                        .HasForeignKey("CoSupervisorId");

                    b.HasOne("ProjectIT.Shared.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectIT.Shared.Models.Supervisor", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoSupervisor");

                    b.Navigation("Semester");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Request", b =>
                {
                    b.HasOne("ProjectIT.Shared.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Topic", b =>
                {
                    b.HasOne("ProjectIT.Shared.Models.Project", null)
                        .WithMany("Topics")
                        .HasForeignKey("ProjectId");

                    b.HasOne("ProjectIT.Shared.Models.Request", null)
                        .WithMany("Topics")
                        .HasForeignKey("RequestId");

                    b.HasOne("ProjectIT.Shared.Models.Supervisor", null)
                        .WithMany("Topics")
                        .HasForeignKey("SupervisorId");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Student", b =>
                {
                    b.HasOne("ProjectIT.Shared.Models.Project", null)
                        .WithMany("Students")
                        .HasForeignKey("ProjectId");

                    b.HasOne("ProjectIT.Shared.Models.Request", null)
                        .WithMany("Members")
                        .HasForeignKey("RequestId");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Supervisor", b =>
                {
                    b.HasOne("ProjectIT.Shared.Models.Request", null)
                        .WithMany("Supervisors")
                        .HasForeignKey("RequestId");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Project", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Request", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Supervisors");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("ProjectIT.Shared.Models.Supervisor", b =>
                {
                    b.Navigation("Topics");
                });
#pragma warning restore 612, 618
        }
    }
}
