@attribute [Route(PageUrls.CreateProject)]
@using Microsoft.AspNetCore.Authorization;
@using ProjectIT.Client.Components.Filter
@using ProjectIT.Client.Components.ProjectCard
@using ProjectIT.Client.Components.Search
@using ProjectIT.Client.Components.Tag
@using ProjectIT.Client.Components.Panel
@using ProjectIT.Client.Constants;
@using ProjectIT.Client.Http;
@using ProjectIT.Shared.Dtos.Projects;
@using ProjectIT.Shared.Enums;
@using ProjectIT.Shared.Models;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject AnonymousClient httpClient
@inject NavigationManager navManager
@inject IJSRuntime JSRuntime
@inject DialogService DialogService
@inject IStringLocalizer<EnumsResource> EnumsLocalizer
@attribute [Authorize(Roles = AppRoles.Supervisor)]

<div class="d-flex flex-row justify-content-center gap-5">
    <div class="d-flex flex-column my-4 py-3 gap-4 filter-size">
        <Panel Title="Programmes" InputRequired="true">
            <RadzenCheckBoxList TValue="Programme" Data="@programmeWrappers" @bind-Value=@projectProgrammes
                TextProperty="StringValue" ValueProperty="Programme" Orientation="Orientation.Vertical" />
        </Panel>
        <Panel Title="ECTS Points" InputRequired="true">
            <RadzenRadioButtonList TValue="Ects?" Data="ectsWrappers" @bind-Value=projectEcts TextProperty="StringValue"
                ValueProperty="Ects" Orientation="Orientation.Vertical" />
        </Panel>
    </div>
    <div class="d-flex flex-column mb-4 main-view-size">
        <EditForm Model="@project" OnSubmit="SubmitProjectAsync">
            <p class="fs-7 fw-bold">Title <span style="color: red; font-weight: 400;"> *</span></p>
            <InputText class="border border-0 shadow rounded-1 fs-7 px-3 mb-4"
                style="width: 45rem; height: 2.5rem" @bind-Value="project!.Title" placeholder="Title here..." />
            <p class="fs-7 fw-bold">Description <span style="color: red; font-weight: 400;"> *</span></p>
            <RadzenHtmlEditor @bind-Value="@descriptionHtml" class="border border-0 shadow mb-4" style="height:40rem; width: 45rem" />
            <div class="d-flex">
                <div class="d-flex gap-3">
                    <button type="button" class="btn btn-dark fw-bold py-1 ai-btn-style" @onclick="GenerateTitleFromDescription">
                        AI Title
                    </button>
                    <button type="button" class="btn btn-dark fw-bold py-1 ai-btn-style" @onclick="GenerateTopicsFromDiscription">
                        AI Topics
                    </button>
                </div>
                <div class="d-flex justify-content-end w-100">
                    <button type="button" class="btn btn-danger fw-bold py-1 btn-style" @onclick="CancelProjectAsync">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-success fw-bold py-1 ms-3 btn-style">
                        Post
                    </button>
                </div>
            </div>
        </EditForm>
    </div>
    <div class="d-flex flex-column my-4 py-3 gap-4">
        @{
            DateTime date = DateTime.Now;
        }
        <Panel Title="Semester" InputRequired="true">
            <RadzenRadioButtonList @bind-Value=project.Semester TValue="Semester">
                <Items>
                    <RadzenRadioButtonListItem Text=@($"Spring {date.Year}")
                        Value="new Semester { Season = Season.Spring, Year = date.Year }" />
                    <RadzenRadioButtonListItem Text=@($"Autumn {date.Year}")
                        Value="new Semester { Season = Season.Autumn, Year = date.Year }" />
                    <RadzenRadioButtonListItem Text=@($"Spring {date.Year + 1}")
                        Value="new Semester { Season = Season.Spring, Year = date.Year + 1 }" />
                    <RadzenRadioButtonListItem Text=@($"Autumn {date.Year + 1}")
                        Value="new Semester { Season = Season.Autumn, Year = date.Year + 1 }" />
                </Items>
            </RadzenRadioButtonList>
        </Panel>
        <Panel Title="Language" InputRequired="true">
            <RadzenCheckBoxList TValue="Language" Data="@languageWrappers" @bind-Value=@projectLanguages
                TextProperty="StringValue" ValueProperty="Language" Orientation="Orientation.Vertical" />
        </Panel>
        <Panel Title="Topics">
            <div class="d-flex flex-column gap-2 mb-2">
                @if (topicsInDropdownList is not null)
                {
                    <RadzenDropDown @ref="topicSelector" 
                                    TValue="Topic" 
                                    Placeholder="Select topics" 
                                    AllowFiltering="true"
                                    ClearSearchAfterSelection="true" 
                                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    Data=@topicsInDropdownList
                                    Change="OnTopicSelectedInList" 
                                    ValueProperty="Name" 
                                    TextProperty="Name"
                                    class="flex-grow-1">
                        <Template>
                            @context.Name
                        </Template>
                    </RadzenDropDown>
                }
                <div class="d-flex flex-row gap-2">
                    <form class="d-flex gap-2" onsubmit="event.preventDefault()">
                        <SearchField PlaceholderText="Create new topics..." ShowSearchIcon="false" Width="14.5rem" OnInputValueChanged="(newVal) => topicName = newVal" />
                        <button type="reset" value="reset" class="bg-transparent border-0 add-image-size" @onclick=OnAddNewTopicFromSearchClicked>
                            <img class="rotate-45 w-100 h-70" src="images/baseline_clear_24.png" alt="Add new topic">
                        </button>
                    </form>
                </div>
            </div>
            @foreach (var topic in projectTopics)
            {
                <TagBox Tag="@(new FilterTag { Tag = topic.Name })" IsDisabled="false" OnClicked="() => OnSelectedTopicClicked(topic)" />
            }
        </Panel>
        <Panel Title="CoSupervisor">
            @if (coSupervisors is not null)
            {
                <RadzenDropDown @ref="coSupervisorSelector"
                                TValue="Supervisor"
                                Placeholder="Select cosupervisor"
                                AllowFiltering="true"
                                ClearSearchAfterSelection="true"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                Data=@coSupervisors
                                Change="OnSupervisorSelectedInList"
                                ValueProperty="Id"
                                TextProperty="FullName"
                                class="w-100 mb-3">
                    <Template>
                        @context.FullName
                    </Template>
                </RadzenDropDown>
            }
            @if (projectCoSupervisor is not null)
            {
                @* <div class="d-flex flex-column gap-2">
                    <div class="d-flex flex-start mt-2 align-items-center">
                            <span>@projectCoSupervisor?.FullName</span>
                            <button class="bg-transparent border-0 add-image-size" @onclick="() => OnSelectedCoSupervisorClicked(projectCoSupervisor!)">
                                <img class="w-100 h-70" src="images/baseline_clear_24.png" alt="Clear">
                            </button>
                    </div>
                </div> *@

                <div class="d-flex flex-start flex-wrap flex-column">
                    <div class="d-flex justify-content-between">
                        <span>@projectCoSupervisor?.FullName</span>
                        <button class="bg-transparent border-0 add-image-size" @onclick="() => OnSelectedCoSupervisorClicked(projectCoSupervisor!)">
                            <img class="w-100 h-70" src="images/baseline_clear_24.png" alt="Clear">
                        </button>
                    </div>
                </div>
            }
        </Panel>
    </div>
</div>

@code {
    async Task<dynamic> SelectTopicCategoryDialog(IEnumerable<Topic> newTopics)
    {
        IEnumerable<TopicCategory?> topicCategories = Enum.GetValues(typeof(TopicCategory)).Cast<TopicCategory?>();

        var result = await DialogService.OpenAsync("Select Categories for Topics", ds =>
            @<RadzenStack Gap="1.5rem">
                <div class="d-flex flex-column">
                    @foreach (var topic in newTopics)
                    {
                        <div class="d-flex flex-row align-items-center justify-content-between mb-2">
                            <span class="me-2">@topic.Name</span>
                            <RadzenDropDown TValue="TopicCategory?" Data="@topicCategories" @bind-Value="@topic.Category" Placeholder="Choose a category">
                                <Template Context="category">
                                    @(((Enum)Enum.Parse(typeof(TopicCategory), category.ToString())).GetTranslatedString(EnumsLocalizer))
                                </Template>
                            </RadzenDropDown>
                        </div>
                    }
                </div>
                <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                    <RadzenStack Orientation="Orientation.Horizontal">
                        <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Light" />
                        <RadzenButton Text="Save" Click="() => ds.Close(true)" Style="width: 80px; background-color:black" />
                    </RadzenStack>
                </RadzenStack>
            </RadzenStack>
        );

        return result;
    }
}